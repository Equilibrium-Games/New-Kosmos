/*
 * Copyright (C) 2017, Equilibrium Games - All Rights Reserved.
 *
 * This source file is part of New Kosmos.
 *
 * Unauthorized copying of this file, via any medium is strictly prohibited.
 * Proprietary and confidential.
 */

package kosmos.world;

/**
 * A object that defines a worlds generation parameters.
 */
public class WorldSave {
	private final int seed;
	private final int worldSize;
	private final float worldNoiseSpread;
	private final float worldNoiseFrequency;
	private final float worldNoiseHeight;
	private final float worldIslandInside;
	private final float worldIslandOutside;
	private final float worldIslandParameter;

	private final float dayNightCycle;
	private final float dayNightRatio;

	/**
	 * Creates a new world save definition.
	 *
	 * @param seed The seed used for the world.
	 * @param worldSize The width and height of the world, in tile size.
	 * @param worldNoiseSpread The width of the islands generated by the noise.
	 * @param worldNoiseFrequency The frequency of roughness applied to the noise (lower is smoother).
	 * @param worldNoiseHeight The height multiplier, max world height.
	 * @param worldIslandInside The inside radius of the island shape.
	 * @param worldIslandOutside The outside radius of the island shape.
	 * @param worldIslandParameter The shape parameter (0=circular, 1=rectangular).
	 * @param dayNightCycle The day/night length (seconds).
	 * @param dayNightRatio The percentage of the time that is day.
	 */
	public WorldSave(int seed, int worldSize, float worldNoiseSpread, float worldNoiseFrequency, float worldNoiseHeight, float worldIslandInside, float worldIslandOutside, float worldIslandParameter, float dayNightCycle, float dayNightRatio) {
		this.seed = seed;
		this.worldSize = worldSize;
		this.worldNoiseSpread = worldNoiseSpread;
		this.worldNoiseFrequency = worldNoiseFrequency;
		this.worldNoiseHeight = worldNoiseHeight;
		this.worldIslandInside = worldIslandInside;
		this.worldIslandOutside = worldIslandOutside;
		this.worldIslandParameter = worldIslandParameter;

		this.dayNightCycle = dayNightCycle;
		this.dayNightRatio = dayNightRatio;
	}

	/**
	 * Gets the seed used for the world.
	 *
	 * @return The seed.
	 */
	public int getSeed() {
		return seed;
	}

	/**
	 * Gets the width and height of the world, in tile size.
	 *
	 * @return The world size.
	 */
	public int getWorldSize() {
		return worldSize;
	}

	/**
	 * Gets the width of the islands generated by the noise.
	 *
	 * @return The world noise spread.
	 */
	public float getWorldNoiseSpread() {
		return worldNoiseSpread;
	}

	/**
	 * Gets the frequency of roughness applied to the noise (lower is smoother).
	 *
	 * @return The world noise frequency.
	 */
	public float getWorldNoiseFrequency() {
		return worldNoiseFrequency;
	}

	/**
	 * Gets the height multiplier, max world height.
	 *
	 * @return The world noise height.
	 */
	public float getWorldNoiseHeight() {
		return worldNoiseHeight;
	}

	/**
	 * Gets the inside radius of the island shape.
	 *
	 * @return The world island inside bound.
	 */
	public float getWorldIslandInside() {
		return worldIslandInside;
	}

	/**
	 * Gets the outside radius of the island shape.
	 *
	 * @return The world island outside bound.
	 */
	public float getWorldIslandOutside() {
		return worldIslandOutside;
	}

	/**
	 * Gets the shape parameter (0=circular, 1=rectangular).
	 *
	 * @return The world island circle-square parameter.
	 */
	public float getWorldIslandParameter() {
		return worldIslandParameter;
	}

	/**
	 * Gets the day/night length (seconds).
	 *
	 * @return The day night cycle length.
	 */
	public float getDayNightCycle() {
		return dayNightCycle;
	}

	/**
	 * Gets the percentage of the time that is day.
	 *
	 * @return The day night ratio.
	 */
	public float getDayNightRatio() {
		return dayNightRatio;
	}
}
